// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  CallReducerFlags,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  DbContext,
  ErrorContextInterface,
  Event,
  EventContextInterface,
  Identity,
  ProductType,
  ProductTypeElement,
  ReducerEventContextInterface,
  SubscriptionBuilderImpl,
  SubscriptionEventContextInterface,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
} from "@clockworklabs/spacetimedb-sdk";
export type PlayerCorpse = {
  id: number,
  playerIdentity: Identity,
  username: string,
  posX: number,
  posY: number,
  chunkIndex: number,
  deathTime: Timestamp,
  despawnScheduledAt: Timestamp,
  slotInstanceId0: bigint | undefined,
  slotDefId0: bigint | undefined,
  slotInstanceId1: bigint | undefined,
  slotDefId1: bigint | undefined,
  slotInstanceId2: bigint | undefined,
  slotDefId2: bigint | undefined,
  slotInstanceId3: bigint | undefined,
  slotDefId3: bigint | undefined,
  slotInstanceId4: bigint | undefined,
  slotDefId4: bigint | undefined,
  slotInstanceId5: bigint | undefined,
  slotDefId5: bigint | undefined,
  slotInstanceId6: bigint | undefined,
  slotDefId6: bigint | undefined,
  slotInstanceId7: bigint | undefined,
  slotDefId7: bigint | undefined,
  slotInstanceId8: bigint | undefined,
  slotDefId8: bigint | undefined,
  slotInstanceId9: bigint | undefined,
  slotDefId9: bigint | undefined,
  slotInstanceId10: bigint | undefined,
  slotDefId10: bigint | undefined,
  slotInstanceId11: bigint | undefined,
  slotDefId11: bigint | undefined,
  slotInstanceId12: bigint | undefined,
  slotDefId12: bigint | undefined,
  slotInstanceId13: bigint | undefined,
  slotDefId13: bigint | undefined,
  slotInstanceId14: bigint | undefined,
  slotDefId14: bigint | undefined,
  slotInstanceId15: bigint | undefined,
  slotDefId15: bigint | undefined,
  slotInstanceId16: bigint | undefined,
  slotDefId16: bigint | undefined,
  slotInstanceId17: bigint | undefined,
  slotDefId17: bigint | undefined,
  slotInstanceId18: bigint | undefined,
  slotDefId18: bigint | undefined,
  slotInstanceId19: bigint | undefined,
  slotDefId19: bigint | undefined,
  slotInstanceId20: bigint | undefined,
  slotDefId20: bigint | undefined,
  slotInstanceId21: bigint | undefined,
  slotDefId21: bigint | undefined,
  slotInstanceId22: bigint | undefined,
  slotDefId22: bigint | undefined,
  slotInstanceId23: bigint | undefined,
  slotDefId23: bigint | undefined,
  slotInstanceId24: bigint | undefined,
  slotDefId24: bigint | undefined,
  slotInstanceId25: bigint | undefined,
  slotDefId25: bigint | undefined,
  slotInstanceId26: bigint | undefined,
  slotDefId26: bigint | undefined,
  slotInstanceId27: bigint | undefined,
  slotDefId27: bigint | undefined,
  slotInstanceId28: bigint | undefined,
  slotDefId28: bigint | undefined,
  slotInstanceId29: bigint | undefined,
  slotDefId29: bigint | undefined,
  slotInstanceId30: bigint | undefined,
  slotDefId30: bigint | undefined,
  slotInstanceId31: bigint | undefined,
  slotDefId31: bigint | undefined,
  slotInstanceId32: bigint | undefined,
  slotDefId32: bigint | undefined,
  slotInstanceId33: bigint | undefined,
  slotDefId33: bigint | undefined,
  slotInstanceId34: bigint | undefined,
  slotDefId34: bigint | undefined,
};

/**
 * A namespace for generated helper functions.
 */
export namespace PlayerCorpse {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("id", AlgebraicType.createU32Type()),
      new ProductTypeElement("playerIdentity", AlgebraicType.createIdentityType()),
      new ProductTypeElement("username", AlgebraicType.createStringType()),
      new ProductTypeElement("posX", AlgebraicType.createF32Type()),
      new ProductTypeElement("posY", AlgebraicType.createF32Type()),
      new ProductTypeElement("chunkIndex", AlgebraicType.createU32Type()),
      new ProductTypeElement("deathTime", AlgebraicType.createTimestampType()),
      new ProductTypeElement("despawnScheduledAt", AlgebraicType.createTimestampType()),
      new ProductTypeElement("slotInstanceId0", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId0", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId1", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId1", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId2", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId2", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId3", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId3", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId4", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId4", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId5", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId5", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId6", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId6", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId7", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId7", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId8", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId8", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId9", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId9", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId10", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId10", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId11", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId11", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId12", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId12", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId13", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId13", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId14", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId14", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId15", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId15", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId16", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId16", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId17", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId17", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId18", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId18", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId19", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId19", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId20", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId20", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId21", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId21", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId22", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId22", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId23", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId23", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId24", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId24", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId25", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId25", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId26", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId26", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId27", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId27", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId28", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId28", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId29", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId29", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId30", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId30", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId31", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId31", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId32", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId32", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId33", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId33", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotInstanceId34", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("slotDefId34", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: PlayerCorpse): void {
    PlayerCorpse.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): PlayerCorpse {
    return PlayerCorpse.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


